name: Build and Release

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build-csharp:
    name: Build C# Projects
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project:
          - week6/csharp/adapter_pattern/AdapterPatternApp/AdapterPatternApp.csproj
          - week6/csharp/decorator_pattern/DecoratorPatternApp/DecoratorPatternApp.csproj
          - week6/csharp/facade_pattern/FacadePatternApp/FacadePatternApp.csproj
          - week6/csharp/method_chaining_pattern/MethodChainingPatternApp/MethodChainingPatternApp.csproj
          - week6/csharp/method_chaining_pattern/builder_pattern/BuilderPatternApp/BuilderPatternApp.csproj

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Build C# Project
        run: |
          dotnet build ${{ matrix.project }} --configuration Release
          project_dir=$(dirname ${{ matrix.project }})
          mkdir -p build_outputs/csharp/$(basename $project_dir)
          cp -r $project_dir/bin/Release/* build_outputs/csharp/$(basename $project_dir)/

  build-cpp:
    name: Build C++ Projects
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project:
          - week6/cpp/adapter_pattern
          - week6/cpp/decorator_pattern
          - week6/cpp/facade_pattern
          - week6/cpp/method_chaining_pattern
          - week6/cpp/method_chaining_pattern/builder_pattern

    steps:
      - uses: actions/checkout@v3

      - name: Install g++
        run: sudo apt-get update && sudo apt-get install -y g++

      - name: Compile C++ Project
        run: |
          mkdir -p build_outputs/cpp/$(basename ${{ matrix.project }})
          g++ ${{ matrix.project }}/*.cpp -o build_outputs/cpp/$(basename ${{ matrix.project }})/app

  build-kotlin:
    name: Build Kotlin Projects
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project:
          - week6/kotlin/adapter_pattern/AdapterPatternApp
          - week6/kotlin/decorator_pattern/DecoratorPatternApp
          - week6/kotlin/facade_pattern/FacadePatternApp
          - week6/kotlin/method_chaining_pattern/MethodChainingPattern
          - week6/kotlin/method_chaining_pattern/builder_pattern/BuilderPatternApp

    steps:
      - uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build Kotlin Project
        run: |
          cd ${{ matrix.project }}
          ./gradlew build
          cd ../..
          mkdir -p build_outputs/kotlin/$(basename ${{ matrix.project }})
          cp ${{ matrix.project }}/build/libs/*.jar build_outputs/kotlin/$(basename ${{ matrix.project }})/

  release:
    name: Create GitHub Release
    needs: [build-csharp, build-cpp, build-kotlin]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - uses: actions/checkout@v3

      - name: Archive build outputs
        run: zip -r release-artifacts.zip build_outputs

      - name: Upload GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: release-artifacts.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
